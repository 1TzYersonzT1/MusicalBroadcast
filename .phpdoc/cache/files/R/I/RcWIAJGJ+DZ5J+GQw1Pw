1656736685
AwuilbDvXz%3A8a09be9435442c6480a08eddafb9e0a6-f52cb5c75922c68060e292565e212a2c
s:7960:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImY1MmNiNWM3NTkyMmM2ODA2MGUyOTI1NjVlMjEyYTJjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6Im1pcy1ldmVudG9zLmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjY2OiJyZXNvdXJjZXMvdmlld3MvbGl2ZXdpcmUvb3JnYW5pemFkb3IvZXZlbnRvcy9taXMtZXZlbnRvcy5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUxMjQ6IjxkaXY+DQogICAgPGRpdiBjbGFzcz0ibWluLWgtc2NyZWVuIHRleHQtd2hpdGUgcHktNSI+DQogICAgICAgIDxkaXYgY2xhc3M9IiI+DQogICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LTR4bCBibG9jayBtYi01Ij5Tb2xpY2l0dWRlcyBwZW5kaWVudGVzPC9zcGFuPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBAaWYgKGNvdW50KCRldmVudG9zUGVuZGllbnRlcykgPiAwKQ0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci1jb250YWluZXIgc3dpcGVyRXZlbnRvc1BlbmRpZW50ZXMiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2lwZXItd3JhcHBlciI+DQogICAgICAgICAgICAgICAgICAgICAgICBAZm9yZWFjaCAoJGV2ZW50b3NQZW5kaWVudGVzIGFzICRldmVudG9QZW5kaWVudGUpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpdmV3aXJlOm9yZ2FuaXphZG9yLmV2ZW50b3MuZXZlbnRvIDpldmVudG89IiRldmVudG9QZW5kaWVudGUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOndpcmU6a2V5PSIkZXZlbnRvUGVuZGllbnRlLT5pZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRmb3JlYWNoDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgQGVsc2UNCiAgICAgICAgICAgICAgICA8c3Bhbj5ObyB0aWVuZXMgc29saWNpdHVkZXMgcGVuZGllbnRlczwvc3Bhbj4NCiAgICAgICAgICAgIEBlbmRpZg0KICAgICAgICA8L2Rpdj4NCg0KDQogICAgICAgIDxkaXYgY2xhc3M9Im10LTEwIG1iLTE2Ij4NCiAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtNHhsIGJsb2NrIG1iLTUiPlNvbGljaXR1ZGVzIHJldmlzYWRhczwvc3Bhbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgQGlmIChjb3VudCgkZXZlbnRvc1JldmlzYWRvcykgPiAwKQ0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci1jb250YWluZXIgc3dpcGVyRXZlbnRvc1JldmlzYWRvcyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIEBmb3JlYWNoICgkZXZlbnRvc1JldmlzYWRvcyBhcyAkZXZlbnRvUmV2aXNhZG8pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpdmV3aXJlOm9yZ2FuaXphZG9yLmV2ZW50b3MuZXZlbnRvIDpldmVudG89IiRldmVudG9SZXZpc2FkbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOndpcmU6a2V5PSIkZXZlbnRvUmV2aXNhZG8tPmlkIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBAZWxzZQ0KICAgICAgICAgICAgICAgIDxzcGFuPk5vIHRpZW5lcyBzb2xpY2l0dWRlcyByZXZpc2FkYXM8L3NwYW4+DQogICAgICAgICAgICBAZW5kaWYNCiAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0ibXQtMTAgbWItMTYiPg0KICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC00eGwgYmxvY2sgbWItNSI+U29saWNpdHVkZXMgbW9kaWZpY2FkYXM8L3NwYW4+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIEBpZiAoY291bnQoJGV2ZW50b3NNb2RpZmljYWRvcykgPiAwKQ0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci1jb250YWluZXIgc3dpcGVyUmV2aXNhZGFzIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3dpcGVyLXdyYXBwZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGZvcmVhY2ggKCRldmVudG9zTW9kaWZpY2Fkb3MgYXMgJGV2ZW50b01vZGlmaWNhZG8pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpdmV3aXJlOm9yZ2FuaXphZG9yLmV2ZW50b3MuZXZlbnRvIDpldmVudG89IiRldmVudG9Nb2RpZmljYWRvIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6d2lyZTprZXk9IiRldmVudG9Nb2RpZmljYWRvLT5ydXQiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaA0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIEBlbHNlDQogICAgICAgICAgICAgICAgPHNwYW4+Tm8gdGllbmVzIHNvbGljaXR1ZGVzIHJldmlzYWRhczwvc3Bhbj4NCiAgICAgICAgICAgIEBlbmRpZg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy0xMiI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZzpjb2wtc3RhcnQtNCBsZzpjb2wtc3Bhbi02IGNvbC1zdGFydC0zIGNvbC1zcGFuLTggcHgtNCBweS02Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGxnOmdyaWQtY29scy0zIj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIFRhbGxlcmVzIGFwcm9iYWRvcyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctZ3JlZW4tNDAwIHB4LTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgcHktNSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9ImgtNiB3LTYiIGZpbGw9Im5vbmUiIHZpZXdCb3g9IjAgMCAyNCAyNCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZT0iY3VycmVudENvbG9yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgc3Ryb2tlLXdpZHRoPSIyIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik01IDEzbDQgNEwxOSA3IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsb2NrIG1iLTEiPkV2ZW50b3MgYXByb2JhZG9zPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgYXV0aCgpLT51c2VyKCktPmhvamF2aWRhLT5ldmVudG9zX2Fwcm9iYWRvcyB9fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIFRhbGxlcmVzIHJlY2hhemFkb3MgLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXJlZC02MDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgcHktNSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJoLTYgdy02IiBmaWxsPSJub25lIiB2aWV3Qm94PSIwIDAgMjQgMjQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZT0iY3VycmVudENvbG9yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMTkgN2wtLjg2NyAxMi4xNDJBMiAyIDAgMDExNi4xMzggMjFINy44NjJhMiAyIDAgMDEtMS45OTUtMS44NThMNSA3bTUgNHY2bTQtNnY2bTEtMTBWNGExIDEgMCAwMC0xLTFoLTRhMSAxIDAgMDAtMSAxdjNNNCA3aDE2IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxvY2sgbWItMSI+RWxpbWluYWRvcy9SZWNoYXphZG9zPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyBhdXRoKCktPnVzZXIoKS0+aG9qYXZpZGEtPmV2ZW50b3NfcmVjaGF6YWRvcyB9fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQoNCjxzY3JpcHQ+DQogICAgdmFyIHN3aXBlciA9IG5ldyBTd2lwZXIoIi5zd2lwZXJFdmVudG9zUGVuZGllbnRlcyIsIHsNCiAgICAgICAgc2xpZGVzUGVyVmlldzogMywNCiAgICAgICAgc3BhY2VCZXR3ZWVuOiAzMCwNCiAgICAgICAgcGFnaW5hdGlvbjogew0KICAgICAgICAgICAgZWw6ICIuc3dpcGVyLXBhZ2luYXRpb24iLA0KICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLA0KICAgICAgICB9LA0KICAgIH0pOw0KDQogICAgdmFyIHN3aXBlciA9IG5ldyBTd2lwZXIoIi5zd2lwZXJFdmVudG9zUmV2aXNhZG9zIiwgew0KICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLA0KICAgICAgICBzcGFjZUJldHdlZW46IDMwLA0KICAgICAgICBwYWdpbmF0aW9uOiB7DQogICAgICAgICAgICBlbDogIi5zd2lwZXItcGFnaW5hdGlvbiIsDQogICAgICAgICAgICBjbGlja2FibGU6IHRydWUsDQogICAgICAgIH0sDQogICAgfSk7DQo8L3NjcmlwdD4NCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";