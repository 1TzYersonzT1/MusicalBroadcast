1656736688
AwuilbDvXz%3A77b2e6829e67812a868743e804fa53ee-50ac524980f5da18c6cf62ee14a839b3
s:11240:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"50ac524980f5da18c6cf62ee14a839b3";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"2255eff39c22591d4aa7c5f55442967953f81f9e.php";s:39:" phpDocumentor\Reflection\Php\File path";s:68:"storage/framework/views/2255eff39c22591d4aa7c5f55442967953f81f9e.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7560:"<div>
    <div class='container mx-auto py-5 text-white'>
        <div class="mb-6 lg:mt-0 mt-5"><span class="text-4xl">Organizar nuevo taller.</span></div>
        <?php if($errors): ?>
            <?php $__currentLoopData = $errors->all(); $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $message): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                <?php echo e($message); ?>

            <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
        <?php endif; ?>
        <div class="lg:flex">
            <div class="flex flex-col lg:mr-5">
                <form wire:submit.prevent='nuevoTaller' enctype="multipart/form-data">
                    <div class="lg:flex">
                        <div class="flex flex-col">
                            <span class="font-bold">Titulo</span>
                            <div class="flex flex-col mt-1">
                                <input type="text" class="border-0 bg-primary px-0 py-1 font-light lg:w-96"
                                    wire:model='titulo' maxlength="30"
                                    placeholder="Escriba el titulo del taller (máximo 30 caracteres)" />
                            </div>
                        </div>
                    </div>
                    <div class="mt-2 flex flex-col">
                        <div class="flex mb-3">
                            <div class="flex flex-col mt-3">
                                <span class="font-bold">Fecha</span>
                                <input type="date" wire:model="fecha"
                                    class="bg-primary text-white p-0 mr-5 mt-1" />
                            </div>
                            <div class="flex flex-col mt-3">
                                <span class="font-bold">Hora</span>
                                <div class="flex flex-col">
                                    <input type="time" id="hora" wire:model="hora" class="bg-primary border-0 p-0 mt-1">

                                </div>

                            </div>

                        </div>
                        <div class="flex items-center mb-2 mt-3">
                            <span class="font-bold">Aforo:</span>
                            <div class="flex flex-col">
                                <input type="number" min='1' max='12' id="aforo" wire:model='aforo'
                                    class="bg-primary p-0 px-2 w-16 ml-3 mr-3" />

                            </div><span>personas.</span>
                        </div>
                        <div class="flex items-center mb-3 mt-3 text-sm">
                            <span class="font-bold">Lugar: </span>
                            <div class="flex flex-col">
                                <input type="text" placeholder="¿Donde planeas realizar el taller?" wire:model='lugar'
                                    class="border-0 bg-primary w-64 py-0 px-2" />

                            </div>
                        </div>

                        <div class="mt-3">
                            <label for="descripcion" class="font-bold lg:w-96">Descripción</label>
                            <div class="flex flex-col">
                                <textarea placeholder="Escriba una descripción (máximo 255 caracteres)"
                                    wire:model='descripcion' maxlength="255"
                                    class="resize-none lg:w-96 bg-primary h-40 mt-1 mb-1"></textarea>
                                <span><?php echo e($caracteres_descripcion); ?> / 255</span>
                            </div>
                        </div>
                    </div>
            </div>

            <div class="w-80"><input type="file" wire:model="imagen" />
                <div wire:loading wire:target="imagen" 
                        class="bg-blue-100 border-t border-b border-blue-500 text-blue-700 px-4 py-3" role="alert">
                    <p class="font-bold">Cargando imagen</p>
                  </div>
             
                <?php $__errorArgs = ['imagen'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                
                <?php else: ?>
                    <?php if($imagen ): ?>
                    <img src="<?php echo e($imagen->temporaryUrl()); ?>" class="mt-5">
                    <?php endif; ?>
                <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
            </div>

            <div class="grid lg:grid-cols-2 lg:grid-rows-2 lg:mt-0 mt-5 ml-5">

                <?php
if (! isset($_instance)) {
    $html = \Livewire\Livewire::mount('taller.crear.requisito.requisitos', ['requisitos' => $requisitos])->html();
} elseif ($_instance->childHasBeenRendered('R8NdhQy')) {
    $componentId = $_instance->getRenderedChildComponentId('R8NdhQy');
    $componentTag = $_instance->getRenderedChildComponentTagName('R8NdhQy');
    $html = \Livewire\Livewire::dummyMount($componentId, $componentTag);
    $_instance->preserveRenderedChild('R8NdhQy');
} else {
    $response = \Livewire\Livewire::mount('taller.crear.requisito.requisitos', ['requisitos' => $requisitos]);
    $html = $response->html();
    $_instance->logRenderedChild('R8NdhQy', $response->id(), \Livewire\Livewire::getRootElementTagName($html));
}
echo $html;
?>

                <?php
if (! isset($_instance)) {
    $html = \Livewire\Livewire::mount('taller.crear.protocolo.protocolos', ['protocolos' => $protocolos])->html();
} elseif ($_instance->childHasBeenRendered('qj5cuLl')) {
    $componentId = $_instance->getRenderedChildComponentId('qj5cuLl');
    $componentTag = $_instance->getRenderedChildComponentTagName('qj5cuLl');
    $html = \Livewire\Livewire::dummyMount($componentId, $componentTag);
    $_instance->preserveRenderedChild('qj5cuLl');
} else {
    $response = \Livewire\Livewire::mount('taller.crear.protocolo.protocolos', ['protocolos' => $protocolos]);
    $html = $response->html();
    $_instance->logRenderedChild('qj5cuLl', $response->id(), \Livewire\Livewire::getRootElementTagName($html));
}
echo $html;
?>

                <div class="justify-self-center self-center">
                    <button type="submit"
                        class="border border-white px-7 py-3 my-10 lg:my-0 hover:bg-white hover:text-primary">Solicitar
                        permiso</button>
                </div>

            </div>

            </form>
        </div>
    </div>
</div>

<script>
    window.addEventListener("nuevoTaller", function() {
        Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'Solicitud enviada',
            text: `Recuerda que debes esperar a que se apruebe el taller, puedes
            revisar el estado de tu solicitud en todo momento o contactarte con soporte si tienes alguna duda`,
            showConfirmButton: false,
            timer: 10000
        }).then((isVisible) => {
            if (!isVisible.isComfirmed) {
                location.href = "/talleres";
            }
        });
    });

</script>
<?php /**PATH C:\Users\Jorge\Desktop\LaravelByXampp\bart\resources\views/livewire/taller/crear-taller.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";