1656736690
AwuilbDvXz%3A9d9fb5b9006aafbef7c52e89efc1a328-835f3337b9886cfe26e890bdd733c0f8
s:11816:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"835f3337b9886cfe26e890bdd733c0f8";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"3761b723147633784e09b9a62add5ee91de64e61.php";s:39:" phpDocumentor\Reflection\Php\File path";s:68:"storage/framework/views/3761b723147633784e09b9a62add5ee91de64e61.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7993:"<div>
    <div class="min-h-screen text-white py-5">
        <div class="">
            <div>
                <span class="text-4xl block mb-5">Solicitudes pendientes</span>
            </div>
            <?php if(count($eventosPendientes) > 0): ?>
                <div class="swiper-container swiperEventosPendientes">
                    <div class="swiper-wrapper">
                        <?php $__currentLoopData = $eventosPendientes; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $eventoPendiente): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                            <?php
if (! isset($_instance)) {
    $html = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoPendiente])->html();
} elseif ($_instance->childHasBeenRendered($eventoPendiente->id)) {
    $componentId = $_instance->getRenderedChildComponentId($eventoPendiente->id);
    $componentTag = $_instance->getRenderedChildComponentTagName($eventoPendiente->id);
    $html = \Livewire\Livewire::dummyMount($componentId, $componentTag);
    $_instance->preserveRenderedChild($eventoPendiente->id);
} else {
    $response = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoPendiente]);
    $html = $response->html();
    $_instance->logRenderedChild($eventoPendiente->id, $response->id(), \Livewire\Livewire::getRootElementTagName($html));
}
echo $html;
?>
                        <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                    </div>
                </div>
            <?php else: ?>
                <span>No tienes solicitudes pendientes</span>
            <?php endif; ?>
        </div>


        <div class="mt-10 mb-16">
            <div>
                <span class="text-4xl block mb-5">Solicitudes revisadas</span>
            </div>
            <?php if(count($eventosRevisados) > 0): ?>
                <div class="swiper-container swiperEventosRevisados">
                    <div class="swiper-wrapper">
                        <?php $__currentLoopData = $eventosRevisados; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $eventoRevisado): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                            <?php
if (! isset($_instance)) {
    $html = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoRevisado])->html();
} elseif ($_instance->childHasBeenRendered($eventoRevisado->id)) {
    $componentId = $_instance->getRenderedChildComponentId($eventoRevisado->id);
    $componentTag = $_instance->getRenderedChildComponentTagName($eventoRevisado->id);
    $html = \Livewire\Livewire::dummyMount($componentId, $componentTag);
    $_instance->preserveRenderedChild($eventoRevisado->id);
} else {
    $response = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoRevisado]);
    $html = $response->html();
    $_instance->logRenderedChild($eventoRevisado->id, $response->id(), \Livewire\Livewire::getRootElementTagName($html));
}
echo $html;
?>
                        <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                    </div>
                </div>
            <?php else: ?>
                <span>No tienes solicitudes revisadas</span>
            <?php endif; ?>
        </div>

        <div class="mt-10 mb-16">
            <div>
                <span class="text-4xl block mb-5">Solicitudes modificadas</span>
            </div>
            <?php if(count($eventosModificados) > 0): ?>
                <div class="swiper-container swiperRevisadas">
                    <div class="swiper-wrapper">
                        <?php $__currentLoopData = $eventosModificados; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $eventoModificado): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                            <?php
if (! isset($_instance)) {
    $html = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoModificado])->html();
} elseif ($_instance->childHasBeenRendered($eventoModificado->rut)) {
    $componentId = $_instance->getRenderedChildComponentId($eventoModificado->rut);
    $componentTag = $_instance->getRenderedChildComponentTagName($eventoModificado->rut);
    $html = \Livewire\Livewire::dummyMount($componentId, $componentTag);
    $_instance->preserveRenderedChild($eventoModificado->rut);
} else {
    $response = \Livewire\Livewire::mount('organizador.eventos.evento', ['evento' => $eventoModificado]);
    $html = $response->html();
    $_instance->logRenderedChild($eventoModificado->rut, $response->id(), \Livewire\Livewire::getRootElementTagName($html));
}
echo $html;
?>
                        <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                    </div>
                </div>
            <?php else: ?>
                <span>No tienes solicitudes revisadas</span>
            <?php endif; ?>
        </div>

        <div class="grid grid-cols-12">
            <div class="lg:col-start-4 lg:col-span-6 col-start-3 col-span-8 px-4 py-6">
                <div class="grid lg:grid-cols-3">

                    <!-- Talleres aprobados -->
                    <div class="bg-green-400 px-4">
                        <div class="flex flex-col items-center py-5">
                            <div class="flex flex-col items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                                    stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M5 13l4 4L19 7" />
                                </svg>
                                <div class="flex flex-col items-center">
                                    <span class="block mb-1">Eventos aprobados</span>
                                    <span><?php echo e(auth()->user()->hojavida->eventos_aprobados); ?></span>
                                </div>
                            </div>

                        </div>
                    </div>

                    <!-- Talleres rechazados -->
                    <div class="bg-red-600">
                        <div class="flex flex-col items-center py-5">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                            <div class="flex flex-col items-center">

                                <span class="block mb-1">Eliminados/Rechazados</span>
                                <span><?php echo e(auth()->user()->hojavida->eventos_rechazados); ?></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var swiper = new Swiper(".swiperEventosPendientes", {
        slidesPerView: 3,
        spaceBetween: 30,
        pagination: {
            el: ".swiper-pagination",
            clickable: true,
        },
    });

    var swiper = new Swiper(".swiperEventosRevisados", {
        slidesPerView: 3,
        spaceBetween: 30,
        pagination: {
            el: ".swiper-pagination",
            clickable: true,
        },
    });
</script>
<?php /**PATH C:\Users\Jorge\Desktop\LaravelByXampp\bart\resources\views/livewire/organizador/eventos/mis-eventos.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";