1656736696
AwuilbDvXz%3A437df74c78ca5cf898879971551d6415-ea87adc6f9105f2ab600ed3bbed53e8d
s:25200:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ea87adc6f9105f2ab600ed3bbed53e8d";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"593c075af360487a435c7a77ad1914944fd70263.php";s:39:" phpDocumentor\Reflection\Php\File path";s:68:"storage/framework/views/593c075af360487a435c7a77ad1914944fd70263.php";s:41:" phpDocumentor\Reflection\Php\File source";s:18028:"<div class="min-h-screen text-white py-5">
    <div class="mb-5">
        <span class="font-bold text-4xl">Solicitud de nuevos artistas</span>
    </div>

    <?php if(count($artistasPendientes) > 0): ?>
        <div class="w-full">
            <?php $__currentLoopData = $artistasPendientes; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $artistaPendiente): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                <div class="bg-gray-200 px-4 py-6 text-primary my-4 lg:w-5/6">

                    <div class="flex justify-between items-center mb-5">
                        <div>
                            <span class="font-bold">Solicitado por:</span>
                            <span><?php echo e($artistaPendiente->artista->representante->nombre); ?>

                                <?php echo e($artistaPendiente->artista->representante->apellidos); ?></span>
                        </div>

                        <?php if($artistaPendiente->estado == 0): ?>
                            <div class="bg-yellow-300 rounded-full w-32 py-1 text-center"><span
                                    class="text-purple-600">Pendiente</span> </div>
                        <?php endif; ?>

                        <?php if($artistaPendiente->estado == 1): ?>
                            <div class="bg-pink-400 rounded-full w-32 py-1 text-center"><span
                                    class="text-white">Revisada</span>
                            </div>
                        <?php endif; ?>

                        <?php if($artistaPendiente->estado == 4): ?>
                            <div class="bg-blue-400 rounded-full w-32 py-1 text-center"><span
                                    class="text-white">Modificada</span>
                            </div>
                        <?php endif; ?>

                        <?php if($artistaPendiente->estado == 5): ?>
                            <div class="bg-pink-700 rounded-full w-32 py-1 text-center"><span
                                    class="text-white">Pospuesto</span>
                            </div>
                        <?php endif; ?>
                    </div>

                    <div class="grid grid-rows-3 grid-cols-12 gap-4">
                        <div class="lg:row-span-2 row-span-1 lg:col-span-4 col-span-12">
                            <img src="<?php echo e(asset('storage/' . $artistaPendiente->artista->imagen)); ?>"
                                class="h-full w-full" />
                        </div>

                        <div class="lg:row-span-2 row-span-1 lg:col-start-5 lg:col-span-8 col-span-12 flex flex-col">
                            <div class="flex lg:flex-row flex-col justify-between">
                                <div class="flex">
                                    <span class="font-bold">Nombre artista: </span>
                                    <span>&nbsp<?php echo e($artistaPendiente->artista->ART_Nombre); ?></span>
                                </div>

                                <div class="flex lg:my-0 my-2">
                                    <button wire:click="validarAprobarArtista('<?php echo e($artistaPendiente->artista->id); ?>')"
                                        class="bg-green-500 py-1 px-2">Aprobar</button>

                                    <div x-data="{open: false}" x-cloak class="relative">
                                        <button @click="open = true" class="bg-yellow-500 py-1 px-2">Agregar
                                            observación</button>
                                        <div x-show="open"
                                            class="absolute mt-5 bg-white text-primary shadow-md text-white -left-28 px-4 py-2 w-80 bg-opacity-75">
                                            <div class="flex justify-between">
                                                <span class="font-bold">Agregar observación</span>
                                                <svg @click="open = false" xmlns="http://www.w3.org/2000/svg"
                                                    class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                                                    stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round"
                                                        stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </div>
                                            <textarea maxlength='255'
                                                placeholder="Agregue y envíe una observación (máximo 255 caracteres)"
                                                wire:model='observacion'
                                                class="mt-5 resize-none lg:w-72 bg-primary h-40 text-white"></textarea>

                                            <?php $__errorArgs = ['observacion'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                                                <span class="text-red-400"><?php echo e($message); ?></span>
                                            <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>

                                            <button
                                                wire:click="validarObservacionArtista('<?php echo e($artistaPendiente->artista->id); ?>')"
                                                class="bg-primary text-white px-4 py-2 mt-4">Agregar
                                                observación</button>

                                        </div>
                                    </div>

                                    <button
                                        wire:click="validarEliminarArtista('<?php echo e($artistaPendiente->artista->id); ?>')"
                                        class="bg-red-500 py-1 px-2">Rechazar</button>
                                </div>
                            </div>

                            <div class="flex flex-col">
                                <span class="font-bold">Biografia: </span>

                                <textarea disabled
                                    class="resize-none px-0 py-2 h-40 bg-transparent border-0"><?php echo e($artistaPendiente->artista->biografia); ?></textarea>

                            </div>

                            <div class="mt-1">
                                <span class="font-bold">Estilos: </span>
                                <span>
                                    <?php $__currentLoopData = $artistaPendiente->artista->estilos; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $estilo): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                        <?php if($loop->last): ?>
                                            <?php echo e($estilo->EST_Nombre); ?>.
                                        <?php else: ?>
                                            <?php echo e($estilo->EST_Nombre); ?>,
                                        <?php endif; ?>
                                    <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                                </span>
                            </div>
                        </div>
                        <?php if($artistaPendiente->artista->tipo_artista == 2): ?>
                        <div class="lg:col-span-4 col-span-12 h-2">
                            <span class="block mb-2 font-bold">Integrantes</span>
                            
                                <div class="swiper-container swiperIntegrantes">
                                    <div class="swiper-wrapper">
                                        <?php $__currentLoopData = $artistaPendiente->artista->integrantes; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $integrante): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                            <div class="swiper-slide flex flex-col items-center">
                                                <img src="<?php echo e(asset('storage/' . $integrante->imagen)); ?>"
                                                    class="h-12 w-12 rounded-full" />
                                                <span><?php echo e($integrante->nombre); ?> <?php echo e($integrante->apellidos); ?>

                                                </span>
                                            </div>
                                        <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                                    </div>
                                </div>
                                <div class="swiper-pagination-integrantes"></div>
               
                        </div>
                        <?php endif; ?>

                        <div class="lg:col-span-4 col-span-12 row-span-2">
                            <span class="block mb-2 font-bold">Albumes</span>
                            <div class="swiper-container swiperAlbumes">
                                <div class="swiper-wrapper">
                                    <?php $__currentLoopData = $artistaPendiente->artista->albumes; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $album): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                        <div class="swiper-slide flex flex-col items-center">

                                            <img src="<?php echo e(asset('storage/' . $album->imagen)); ?>"
                                                class="h-12 w-12 rounded-full" />
                                            <span><?php echo e($album->ALB_Nombre); ?></span>

                                        </div>
                                    <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
                                </div>
                            </div>
                            <div class="swiper-pagination-albumes"></div>
                        </div>

                        <div class="lg:col-span-4 col-span-12 flex flex-col">
                            <span class="block mb-2 font-bold">Extra</span>
                            <div class="flex items-center">
                                <?php if($artistaPendiente->artista->facebook != ''): ?>
                                    <a href="https://www.facebook.com/<?php echo e($artistaPendiente->artista->facebook); ?>"
                                        target="_blank">
                                        <div style="float:left">
                                            <img src="/face.png" width="40" height="40">
                                        </div>
                                    </a>
                                <?php endif; ?>
                                <?php if($artistaPendiente->artista->instagram != ''): ?>
                                    <a href="https://www.instagram.com/<?php echo e($artistaPendiente->artista->instagram); ?>"
                                        target="_blank">
                                        <div style="float:left">
                                            <img src="/insta.png" width="40" height="40">
                                        </div>
                                    </a>
                                <?php endif; ?>
                                <?php if($artistaPendiente->artista->twitter != ''): ?>
                                    <a href="https://twitter.com/<?php echo e($artistaPendiente->artista->twitter); ?>"
                                        target="_blank">
                                        <div style="float:left">
                                            <img src="/twiter.png" width="40" height="40">
                                        </div>
                                    </a>
                                <?php endif; ?>
                            </div>
                            <div class="flex mt-2">
                                <?php if($artistaPendiente->artista->spotify != ''): ?>
                                    <iframe
                                        src="https://open.spotify.com/follow/1/?uri=spotify:artist:<?php echo e($artistaPendiente->artista->spotify); ?>&size=detail&theme=light&show-count=0"
                                        width="200" height="56" scrolling="no" frameborder="0"
                                        style="border:none; overflow:hidden;" allowtransparency="true"></iframe>
                                <?php endif; ?>

                                <?php if($artistaPendiente->artista->youtube != ''): ?>
                                    <div class="g-ytsubscribe"
                                        data-channelid="<?php echo e($artistaPendiente->artista->youtube); ?>" data-layout="full"
                                        data-count="hidden">
                                    </div>
                                <?php endif; ?>
                            </div>
                        </div>
                    </div>
                </div>
            <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>
        </div>
    <?php else: ?>
        <span>No hay solicitudes de nuevos artistas pendientes</span>
    <?php endif; ?>
</div>

<script>
    window.addEventListener('validarAprobarArtista', function() {
        Swal.fire({
            title: '¿Está seguro?',
            text: `Esta a punto de aprobar la solicitud, por lo que el artista
            se podrá visualizar en la página.`,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Cancelar',
            confirmButtonText: 'Si, aprobar'
        }).then((result) => {
            if (result.isConfirmed) {
                Livewire.emit('confirmarAgregarArtista');

                Swal.fire({
                    title: 'Exito',
                    text: `Se ha aprobado la solicitud`,
                    icon: 'success',
                    timer: 3000,
                }).then((result) => {
                    if (!result.isVisible) {
                        location.href = location.href;
                    }
                });
            }
        });
    });


    window.addEventListener("validarObservacionArtista", function() {
        Swal.fire({
            title: '¿Está seguro?',
            text: `Se modificara la solicitud actual con la observación que ha hecho`,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Cancelar',
            confirmButtonText: 'Agregar'
        }).then((result) => {
            if (result.isConfirmed) {
                Livewire.emit('confirmarObservacionArtista');

                Swal.fire({
                    title: 'Exito',
                    text: `Se ha agregado la observación`,
                    icon: 'success',
                    timer: 3000,
                }).then((result) => {
                    if (!result.isVisible) {
                        location.href = location.href;
                    }
                });
            }
        });
    });


    window.addEventListener('validarEliminarArtista', function() {
        Swal.fire({
            title: '¿Está seguro?',
            text: `Esta a punto de rechazar la solicitud, por lo que el artista
            no será almacenado y la información se perderá.`,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Cancelar',
            confirmButtonText: 'Si, rechazar'
        }).then((result) => {
            if (result.isConfirmed) {
                Livewire.emit('confirmarEliminarArtista');

                Swal.fire({
                    title: 'Exito',
                    text: `Se ha rechazado la solicitud`,
                    icon: 'success',
                    timer: 3000,
                }).then((result) => {
                    if (!result.isVisible) {
                        location.href = location.href;
                    }
                })
            }
        });
    });

    var swiper = new Swiper('.swiperAlbumes', {
        slidesPerView: 2,
        spaceBetween: 10,
        pagination: {
            el: ".swiper-pagination-albumes",
            clickable: true,
        },
        breakpoints: {
            1024: {
                slidesPerView: 1,
                spaceBetween: 0,
            },
        },
    });

    var swiper = new Swiper('.swiperIntegrantes', {
        slidesPerView: 2,
        spaceBetween: 10,
        pagination: {
            el: ".swiper-pagination-integrantes",
            clickable: true,
        },
        breakpoints: {
            1024: {
                slidesPerView: 1,
                spaceBetween: 0,
            },
        },
    });
</script>
<?php /**PATH C:\Users\Jorge\Desktop\LaravelByXampp\bart\resources\views/livewire/administrador/artistas/artistas.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";