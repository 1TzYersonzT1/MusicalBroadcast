1656736686
AwuilbDvXz%3A7cf54f7a963ce8876b6cd02fd66bd9ac-d82c069858972183e099d5fd94f056fc
s:7900:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ4MmMwNjk4NTg5NzIxODNlMDk5ZDVmZDk0ZjA1NmZjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjI6Im1pcy10YWxsZXJlcy5ibGFkZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo2ODoicmVzb3VyY2VzL3ZpZXdzL2xpdmV3aXJlL29yZ2FuaXphZG9yL3RhbGxlcmVzL21pcy10YWxsZXJlcy5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUwNzg6IjxkaXY+DQogICAgPGRpdiBjbGFzcz0ibWluLWgtc2NyZWVuIHRleHQtd2hpdGUgcHktNSI+DQogICAgICAgIDxkaXYgY2xhc3M9IiI+DQogICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LTR4bCBibG9jayBtYi01Ij5Tb2xpY2l0dWRlcyBwZW5kaWVudGVzPC9zcGFuPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBAaWYgKGNvdW50KCR0YWxsZXJlc1BlbmRpZW50ZXMpID4gMCkNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2lwZXItY29udGFpbmVyIHN3aXBlclBlbmRpZW50ZXMiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2lwZXItd3JhcHBlciI+DQogICAgICAgICAgICAgICAgICAgICAgICBAZm9yZWFjaCAoJHRhbGxlcmVzUGVuZGllbnRlcyBhcyAkdGFsbGVyUGVuZGllbnRlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaXZld2lyZTpvcmdhbml6YWRvci50YWxsZXJlcy50YWxsZXIgOnRhbGxlcj0iJHRhbGxlclBlbmRpZW50ZSIgOndpcmU6a2V5PSIkdGFsbGVyUGVuZGllbnRlLT5pZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRmb3JlYWNoDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgQGVsc2UNCiAgICAgICAgICAgICAgICA8c3Bhbj5ObyB0aWVuZXMgc29saWNpdHVkZXMgcGVuZGllbnRlczwvc3Bhbj4NCiAgICAgICAgICAgIEBlbmRpZg0KICAgICAgICA8L2Rpdj4NCg0KDQogICAgICAgIDxkaXYgY2xhc3M9Im10LTEwIG1iLTE2Ij4NCiAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtNHhsIGJsb2NrIG1iLTUiPlNvbGljaXR1ZGVzIHJldmlzYWRhczwvc3Bhbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgQGlmIChjb3VudCgkdGFsbGVyZXNSZXZpc2Fkb3MpID4gMCkNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2lwZXItY29udGFpbmVyIHN3aXBlclJldmlzYWRhcyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIEBmb3JlYWNoICgkdGFsbGVyZXNSZXZpc2Fkb3MgYXMgJHRhbGxlclJldmlzYWRvKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaXZld2lyZTpvcmdhbml6YWRvci50YWxsZXJlcy50YWxsZXIgOnRhbGxlcj0nJHRhbGxlclJldmlzYWRvJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6d2lyZTprZXk9IiR0YWxsZXJSZXZpc2Fkby0+aWQiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaA0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIEBlbHNlDQogICAgICAgICAgICAgICAgPHNwYW4+Tm8gdGllbmVzIHNvbGljaXR1ZGVzIHJldmlzYWRhczwvc3Bhbj4NCiAgICAgICAgICAgIEBlbmRpZg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJtdC0xMCBtYi0xNiI+DQogICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LTR4bCBibG9jayBtYi01Ij5Tb2xpY2l0dWRlcyBtb2RpZmljYWRhczwvc3Bhbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgQGlmIChjb3VudCgkdGFsbGVyZXNNb2RpZmljYWRvcykgPiAwKQ0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXBlci1jb250YWluZXIgc3dpcGVyUmV2aXNhZGFzIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3dpcGVyLXdyYXBwZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGZvcmVhY2ggKCR0YWxsZXJlc01vZGlmaWNhZG9zIGFzICR0YWxsZXJNb2RpZmljYWRvKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaXZld2lyZTpvcmdhbml6YWRvci50YWxsZXJlcy50YWxsZXIgOnRhbGxlcj0nJHRhbGxlck1vZGlmaWNhZG8nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp3aXJlOmtleT0iJHRhbGxlck1vZGlmaWNhZG8tPmlkIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBAZWxzZQ0KICAgICAgICAgICAgICAgIDxzcGFuPk5vIHRpZW5lcyBzb2xpY2l0dWRlcyByZXZpc2FkYXM8L3NwYW4+DQogICAgICAgICAgICBAZW5kaWYNCiAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtMTIiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGc6Y29sLXN0YXJ0LTQgbGc6Y29sLXNwYW4tNiBjb2wtc3RhcnQtMyBjb2wtc3Bhbi04IHB4LTQgcHktNiI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBsZzpncmlkLWNvbHMtMyI+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSBUYWxsZXJlcyBhcHJvYmFkb3MgLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLWdyZWVuLTQwMCBweC00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIHB5LTUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJoLTYgdy02IiBmaWxsPSJub25lIiB2aWV3Qm94PSIwIDAgMjQgMjQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9ImN1cnJlbnRDb2xvciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNNSAxM2w0IDRMMTkgNyIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJibG9jayBtYi0xIj5UYWxsZXJlcyBhcHJvYmFkb3M8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyBhdXRoKCktPnVzZXIoKS0+aG9qYXZpZGEtPnRhbGxlcmVzX2Fwcm9iYWRvcyB9fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIFRhbGxlcmVzIHJlY2hhemFkb3MgLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLXJlZC02MDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgcHktNSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJoLTYgdy02IiBmaWxsPSJub25lIiB2aWV3Qm94PSIwIDAgMjQgMjQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZT0iY3VycmVudENvbG9yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMTkgN2wtLjg2NyAxMi4xNDJBMiAyIDAgMDExNi4xMzggMjFINy44NjJhMiAyIDAgMDEtMS45OTUtMS44NThMNSA3bTUgNHY2bTQtNnY2bTEtMTBWNGExIDEgMCAwMC0xLTFoLTRhMSAxIDAgMDAtMSAxdjNNNCA3aDE2IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxvY2sgbWItMSI+RWxpbWluYWRvcy9SZWNoYXphZG9zPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyBhdXRoKCktPnVzZXIoKS0+aG9qYXZpZGEtPnRhbGxlcmVzX3JlY2hhemFkb3MgfX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4NCg0KDQo8c2NyaXB0Pg0KICAgIHZhciBzd2lwZXIgPSBuZXcgU3dpcGVyKCIuc3dpcGVyUGVuZGllbnRlcyIsIHsNCiAgICAgICAgc2xpZGVzUGVyVmlldzogMywNCiAgICAgICAgc3BhY2VCZXR3ZWVuOiAzMCwNCiAgICAgICAgcGFnaW5hdGlvbjogew0KICAgICAgICAgICAgZWw6ICIuc3dpcGVyLXBhZ2luYXRpb24iLA0KICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLA0KICAgICAgICB9LA0KICAgIH0pOw0KDQogICAgdmFyIHN3aXBlciA9IG5ldyBTd2lwZXIoIi5zd2lwZXJSZXZpc2FkYXMiLCB7DQogICAgICAgIHNsaWRlc1BlclZpZXc6IDMsDQogICAgICAgIHNwYWNlQmV0d2VlbjogMzAsDQogICAgICAgIHBhZ2luYXRpb246IHsNCiAgICAgICAgICAgIGVsOiAiLnN3aXBlci1wYWdpbmF0aW9uIiwNCiAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSwNCiAgICAgICAgfSwNCiAgICB9KTsNCjwvc2NyaXB0Pg0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";